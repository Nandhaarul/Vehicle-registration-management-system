CREATE TABLE users(
    id NUMBER(10) NOT NULL,
    firstname VARCHAR2(30),
    lastname VARCHAR2(30),
    username VARCHAR2(30),
    email VARCHAR2(40),
    password VARCHAR2(264),
    mobile VARCHAR2(40),
    roles VARCHAR2(6),
    aadhaar VARCHAR2(15) PRIMARY KEY,
    gender VARCHAR2(10)
);
CREATE TABLE vehicles (
    vid NUMBER(10) PRIMARY KEY,
    vin VARCHAR2(17),
    wsize NUMBER(5),
    vendor VARCHAR2(15),
    name VARCHAR2(15),
    model VARCHAR2(15),
    man_year NUMBER(4),
    colour VARCHAR2(15),
    vtype VARCHAR2(10)
);
CREATE TABLE registration (
    rid INT primary key,
    registernumber VARCHAR2(20),
    aadhaar VARCHAR2(15),
    vin VARCHAR2(17)
);
ALTER TABLE registration
ADD CONSTRAINT fk_registration_another_table FOREIGN KEY (rid) REFERENCES existing_table(rid);

ALTER TABLE registration
ADD CONSTRAINT fk_registration_aadhaar FOREIGN KEY (aadhaar) REFERENCES users(aadhaar);

ALTER TABLE registration
ADD CONSTRAINT fk_registration_vin FOREIGN KEY (vin) REFERENCES vehicles(vin);

CREATE TABLE registrationsrequest (
    rrid INT PRIMARY KEY,
    rid int,
    aadhaar VARCHAR2(15),
    vid number(10)
);
ALTER TABLE registrationsrequest
ADD CONSTRAINT fk_registrationsrequest_aadhaar FOREIGN KEY (aadhaar) REFERENCES users(aadhaar);
ALTER TABLE registrationsrequest
ADD CONSTRAINT fk_registrationsrequest_vin FOREIGN KEY (vid) REFERENCES vehicles(vid);
ALTER TABLE registrationsrequest
ADD CONSTRAINT fk_registrationsrequest_rid FOREIGN KEY (rid) REFERENCES registration(rid);


CREATE TABLE rejectedregistrations (
    rejid INT Primary key,
    aadhaar VARCHAR2(15),
    vin VARCHAR2(17)
);

INSERT INTO users (id, firstname, lastname, username, email, password, mobile, roles, aadhaar, gender)
VALUES (1, 'John', 'Doe', 'johndoe', 'johndoe@example.com', 'password123', '1234567890', 'user', '123456789012345', 'Male');

INSERT INTO vehicles (vid, vin, wsize, vendor, name, model, man_year, colour, vtype)
VALUES (1, 'VIN12345678901234', 5, 'VendorA', 'VehicleA', 'ModelA', 2022, 'Red', 'Sedan');

INSERT INTO registration (rid, registernumber, aadhaar, vin)
VALUES (1, 'REG123', '123456789012345', 'VIN12345678901234');

INSERT INTO registrationsrequest (rrid, rid, aadhaar, vid)
VALUES (1, 1, '123456789012345', 1);

INSERT INTO rejectedregistrations (rejid, aadhaar, vin)
VALUES (1, '123456789012345', 'VIN12345678901234');

CREATE OR REPLACE TRIGGER trg_insert_rejectedregistrations
AFTER INSERT ON registrationsrequest
FOR EACH ROW
BEGIN
    INSERT INTO rejectedregistrations (rejid, aadhaar, vin)
    VALUES (:NEW.rrid, :NEW.aadhaar, :NEW.vid);
END;
/

CREATE OR REPLACE PROCEDURE process_registrationsrequest IS
    CURSOR reg_request_cursor IS
        SELECT rrid, rid, aadhaar, vid
        FROM registrationsrequest;

    v_rrid registrationsrequest.rrid%TYPE;
    v_rid registrationsrequest.rid%TYPE;
    v_aadhaar registrationsrequest.aadhaar%TYPE;
    v_vid registrationsrequest.vid%TYPE;
BEGIN

    OPEN reg_request_cursor;


    LOOP
        FETCH reg_request_cursor INTO v_rrid, v_rid, v_aadhaar, v_vid;
        EXIT WHEN reg_request_cursor%NOTFOUND;


        INSERT INTO rejectedregistrations (rejid, aadhaar, vin)
        VALUES (v_rrid, v_aadhaar, v_vid);
    END LOOP;

  
    CLOSE reg_request_cursor;
END;
/
CREATE OR REPLACE VIEW registrations_view AS
SELECT rr.rrid, rr.rid, rr.aadhaar, rr.vid, u.firstname, u.lastname, v.name AS vehicle_name
FROM registrationsrequest rr
JOIN users u ON rr.aadhaar = u.aadhaar
JOIN vehicles v ON rr.vid = v.vid;

-- Disable autocommit to start a transaction
SET AUTOCOMMIT = 0;

-- Start a transaction
START TRANSACTION;

-- Create tables
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    firstname VARCHAR(30),
    lastname VARCHAR(30),
    username VARCHAR(30),
    email VARCHAR(40),
    password VARCHAR(264),
    mobile VARCHAR(40),
    roles VARCHAR(6),
    aadhaar VARCHAR(15) UNIQUE,
    gender VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS vehicles (
    vid INT AUTO_INCREMENT PRIMARY KEY,
    vin VARCHAR(17),
    wsize INT,
    vendor VARCHAR(15),
    name VARCHAR(15),
    model VARCHAR(15),
    man_year INT,
    colour VARCHAR(15),
    vtype VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS registration (
    rid INT AUTO_INCREMENT PRIMARY KEY,
    registernumber VARCHAR(20) UNIQUE,
    aadhaar VARCHAR(15),
    vin VARCHAR(17),
    FOREIGN KEY (aadhaar) REFERENCES users(aadhaar),
    FOREIGN KEY (vin) REFERENCES vehicles(vin)
);

CREATE TABLE IF NOT EXISTS registrationsrequest (
    rrid INT AUTO_INCREMENT PRIMARY KEY,
    rid INT,
    aadhaar VARCHAR(15),
    vid INT,
    FOREIGN KEY (rid) REFERENCES registration(rid),
    FOREIGN KEY (aadhaar) REFERENCES users(aadhaar),
    FOREIGN KEY (vid) REFERENCES vehicles(vid)
);

CREATE TABLE IF NOT EXISTS rejectedregistrations (
    rejid INT AUTO_INCREMENT PRIMARY KEY,
    aadhaar VARCHAR(15),
    vin VARCHAR(17),
    FOREIGN KEY (aadhaar) REFERENCES users(aadhaar),
    FOREIGN KEY (vin) REFERENCES vehicles(vin)
);

-- Commit the transaction
COMMIT;

-- Roll back the transaction in case of an error
ROLLBACK;

-- Print tables
SELECT * FROM users;
SELECT * FROM vehicles;
SELECT * FROM registration;
SELECT * FROM registrationsrequest;
SELECT * FROM rejectedregistrations;


-- Start a transaction
START TRANSACTION;

-- Create tables
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    firstname VARCHAR(30),
    lastname VARCHAR(30),
    username VARCHAR(30),
    email VARCHAR(40),
    password VARCHAR(264),
    mobile VARCHAR(40),
    roles VARCHAR(6),
    aadhaar VARCHAR(15) UNIQUE,
    gender VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS vehicles (
    vid INT AUTO_INCREMENT PRIMARY KEY,
    vin VARCHAR(17),
    wsize INT,
    vendor VARCHAR(15),
    name VARCHAR(15),
    model VARCHAR(15),
    man_year INT,
    colour VARCHAR(15),
    vtype VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS registration (
    rid INT AUTO_INCREMENT PRIMARY KEY,
    registernumber VARCHAR(20) UNIQUE,
    aadhaar VARCHAR(15),
    vin VARCHAR(17),
    FOREIGN KEY (aadhaar) REFERENCES users(aadhaar),
    FOREIGN KEY (vin) REFERENCES vehicles(vin)
);

CREATE TABLE IF NOT EXISTS registrationsrequest (
    rrid INT AUTO_INCREMENT PRIMARY KEY,
    rid INT,
    aadhaar VARCHAR(15),
    vid INT,
    FOREIGN KEY (rid) REFERENCES registration(rid),
    FOREIGN KEY (aadhaar) REFERENCES users(aadhaar),
    FOREIGN KEY (vid) REFERENCES vehicles(vid)
);

CREATE TABLE IF NOT EXISTS rejectedregistrations (
    rejid INT AUTO_INCREMENT PRIMARY KEY,
    aadhaar VARCHAR(15),
    vin VARCHAR(17),
    FOREIGN KEY (aadhaar) REFERENCES users(aadhaar),
    FOREIGN KEY (vin) REFERENCES vehicles(vin)
);

-- Commit the transaction
COMMIT;

-- Roll back the transaction in case of an error
ROLLBACK;

-- Print tables
SELECT * FROM users;
SELECT * FROM vehicles;
SELECT * FROM registration;
SELECT * FROM registrationsrequest;
SELECT * FROM rejectedregistrations;
